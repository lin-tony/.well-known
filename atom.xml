<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tony&#39;s Blog</title>
  
  
  <link href="/hexo_blog/atom.xml" rel="self"/>
  
  <link href="https://lin-tony.github.io/hexo_blog/"/>
  <updated>2018-10-09T09:02:56.228Z</updated>
  <id>https://lin-tony.github.io/hexo_blog/</id>
  
  <author>
    <name>Tony</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python good use</title>
    <link href="https://lin-tony.github.io/hexo_blog/2018/10/09/Python%20good%20use/"/>
    <id>https://lin-tony.github.io/hexo_blog/2018/10/09/Python good use/</id>
    <published>2018-10-09T09:02:56.228Z</published>
    <updated>2018-10-09T09:02:56.228Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nice-Code"><a href="#Nice-Code" class="headerlink" title="Nice Code"></a>Nice Code</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">str.capitalize() 返回str的首字母大写，其他全小写</span><br><span class="line"></span><br><span class="line">str.title()  将str的所有单词首字母大写，其他全小写</span><br><span class="line"></span><br><span class="line">str.count(sub, start= <span class="number">0</span>,end=len(string))  字符串匹配，返回str中sub的个数</span><br><span class="line"></span><br><span class="line">str.endswith(suffix[, start[, end]])  suffix是匹配的字符串，如以该字符串结尾，返回T</span><br><span class="line"></span><br><span class="line">calendar.month(<span class="number">2016</span>, <span class="number">1</span>)  返回该月日历（<span class="keyword">import</span> calendar</span><br><span class="line"></span><br><span class="line">datetime.date.isocalendar()  返回格式如(year，month，day)的元组,(<span class="number">2017</span>, <span class="number">15</span>, <span class="number">6</span>)   其中date=date(<span class="number">2018</span>,<span class="number">6</span>,<span class="number">1</span>)   https://blog.csdn.net/alvin930403/article/details/<span class="number">54089087</span></span><br><span class="line"></span><br><span class="line">join()    list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]    <span class="string">','</span>.join(list) ==<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span></span><br><span class="line"></span><br><span class="line">math.factorial(num)  返回num的阶乘</span><br><span class="line"></span><br><span class="line">reversed(seq) seq -- 要转换的序列，可以是 tuple, string, list 或 range。返回一个反转的迭代器</span><br><span class="line"></span><br><span class="line">enumerate()   将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标---[(<span class="number">0</span>, <span class="string">'Spring'</span>), (<span class="number">1</span>, <span class="string">'Summer'</span>), (<span class="number">2</span>, <span class="string">'Fall'</span>), (<span class="number">3</span>, <span class="string">'Winter'</span>)]</span><br><span class="line"></span><br><span class="line">isupper() 方法检测字符串中所有的字母是否都为大写。</span><br><span class="line"></span><br><span class="line">strip([chars])  移除字符串头尾指定的字符（默认为空格）</span><br><span class="line"></span><br><span class="line">str.encode(encoding=<span class="string">'UTF-8'</span>,errors=<span class="string">'strict'</span>)    errors：设置不同错误的处理方案 默认为 <span class="string">'strict'</span></span><br><span class="line"></span><br><span class="line">pickle.dumps()  把任意对象序列化成一个bytes  .load()反序列化</span><br><span class="line"></span><br><span class="line">json.dumps(d) 返回一个str，内容是标准的JSON   .load()反序列化</span><br><span class="line"></span><br><span class="line">time.strftime(format[, t])以时间元组，并返回以可读字符串表示的当地时间，格式由参数format决定。t是一个struct_time对象。</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="Tips："><a href="#Tips：" class="headerlink" title="Tips："></a>Tips：</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3        指定执行该脚本的解释器</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-       按照UTF-8编码读取源代码</span></span><br><span class="line"></span><br><span class="line">// 称为地板除，两个整数的除法仍然是整数</span><br><span class="line"></span><br><span class="line">函数参数</span><br><span class="line">　　*args是可变参数，args接收的是一个tuple/list；</span><br><span class="line">　　**kw是关键字参数，kw接收的是一个dict。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">functools.partial(int, base=<span class="number">2</span>)  偏函数</span><br><span class="line">　　&gt;&gt;&gt;int2 = functools.partial(int, base=<span class="number">2</span>)</span><br><span class="line">　　&gt;&gt;&gt;int2(<span class="string">'10010'</span>)</span><br><span class="line"> 　　相当于</span><br><span class="line">　　&gt;&gt;&gt;kw = &#123; <span class="string">'base'</span>: <span class="number">2</span> &#125;</span><br><span class="line">　　&gt;&gt;&gt;int(<span class="string">'10010'</span>, **kw)</span><br></pre></td></tr></table></figure><h3 id="iter"><a href="#iter" class="headerlink" title="iter"></a>iter</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">item = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.permutations(item): <span class="comment">#考虑顺序，输出组合</span></span><br><span class="line">print(i)</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">(<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.combinations(item,<span class="number">2</span>): <span class="comment">#无序，不放回</span></span><br><span class="line">    print(i)</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.combinations_with_replacement(item,<span class="number">2</span>): <span class="comment">#无序 放回</span></span><br><span class="line">    print(i)</span><br><span class="line">(<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">(<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">ab = [<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">cd = [<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product(ab, cd): <span class="comment">#笛卡儿积</span></span><br><span class="line">    print(i)</span><br><span class="line">(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">4</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Nice-Code&quot;&gt;&lt;a href=&quot;#Nice-Code&quot; class=&quot;headerlink&quot; title=&quot;Nice Code&quot;&gt;&lt;/a&gt;Nice Code&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str.capitalize() 返回str的首字母大写，其他全小写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str.title()  将str的所有单词首字母大写，其他全小写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str.count(sub, start= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,end=len(string))  字符串匹配，返回str中sub的个数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str.endswith(suffix[, start[, end]])  suffix是匹配的字符串，如以该字符串结尾，返回T&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;calendar.month(&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)  返回该月日历（&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; calendar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datetime.date.isocalendar()  返回格式如(year，month，day)的元组,(&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)   其中date=date(&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)   https://blog.csdn.net/alvin930403/article/details/&lt;span class=&quot;number&quot;&gt;54089087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;join()    list = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]    &lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;.join(list) ==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;math.factorial(num)  返回num的阶乘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reversed(seq) seq -- 要转换的序列，可以是 tuple, string, list 或 range。返回一个反转的迭代器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enumerate()   将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标---[(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Spring&#39;&lt;/span&gt;), (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Summer&#39;&lt;/span&gt;), (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Fall&#39;&lt;/span&gt;), (&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Winter&#39;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;isupper() 方法检测字符串中所有的字母是否都为大写。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strip([chars])  移除字符串头尾指定的字符（默认为空格）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str.encode(encoding=&lt;span class=&quot;string&quot;&gt;&#39;UTF-8&#39;&lt;/span&gt;,errors=&lt;span class=&quot;string&quot;&gt;&#39;strict&#39;&lt;/span&gt;)    errors：设置不同错误的处理方案 默认为 &lt;span class=&quot;string&quot;&gt;&#39;strict&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pickle.dumps()  把任意对象序列化成一个bytes  .load()反序列化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;json.dumps(d) 返回一个str，内容是标准的JSON   .load()反序列化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;time.strftime(format[, t])以时间元组，并返回以可读字符串表示的当地时间，格式由参数format决定。t是一个struct_time对象。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="https://lin-tony.github.io/hexo_blog/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python Quant</title>
    <link href="https://lin-tony.github.io/hexo_blog/2018/10/09/Python%20Quant/"/>
    <id>https://lin-tony.github.io/hexo_blog/2018/10/09/Python Quant/</id>
    <published>2018-10-09T08:58:15.779Z</published>
    <updated>2018-10-09T08:58:15.779Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h1><h3 id="reshape"><a href="#reshape" class="headerlink" title="reshape"></a>reshape</h3><p>重塑<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">b = np.arange(<span class="number">27</span>).reshape(<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">[[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>]</span><br><span class="line">  [ <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line">  [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>]]</span><br><span class="line"></span><br><span class="line"> [[ <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]</span><br><span class="line">  [<span class="number">12</span> <span class="number">13</span> <span class="number">14</span>]</span><br><span class="line">  [<span class="number">15</span> <span class="number">16</span> <span class="number">17</span>]]</span><br><span class="line"></span><br><span class="line"> [[<span class="number">18</span> <span class="number">19</span> <span class="number">20</span>]</span><br><span class="line">  [<span class="number">21</span> <span class="number">22</span> <span class="number">23</span>]</span><br><span class="line">  [<span class="number">24</span> <span class="number">25</span> <span class="number">26</span>]]]</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>reshape(行，列，z)   等于-1的话，那么Numpy会根据剩下的维度计算出数组的另外一个shape属性值<br>a.shape 数组的维度 x,y<br>a.ndim 数组轴的个数<br>a.dtype 数组中元素类型的对象</p><h3 id="array"><a href="#array" class="headerlink" title="array"></a>array</h3><p>a.dtype 数组中元素类型的对象<br>d = np.array([1,2,3,4,5], dtype=’float64’)转换类型<br>np.zeros((3,3,3))创建数值为0的数组（此处是矩阵）<br>np.ones((3,3,3))创建数值为1的数组<br>a.unique() #返回数据里唯一的值的array<br>a.value_counts() #统计各值出现的频率</p><h3 id="arange"><a href="#arange" class="headerlink" title="arange"></a>arange</h3><p>np.arange(5) #数列<br>np.arange(5,20, step = 2)<br>[ 5  7  9 11 13 15 17 19]</p><h3 id="linspace"><a href="#linspace" class="headerlink" title="linspace"></a>linspace</h3><p>numpy.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None) #等差数列<br>num : int, optional  #生成的样本数，默认是50。必须是非负<br>endpoint : bool, optional #如果是真，则一定包括stop，如果为False，一定不会有stop<br>retstep : bool, optional #If True, return (samples, step), where step is the spacing between samples.<br>np.logspace(..,base=2) #等比，比值为2</p><h3 id="other"><a href="#other" class="headerlink" title="other"></a>other</h3><p>索引，切片和迭代<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">x.astype(np.float64) <span class="comment">#强制类型转换</span></span><br><span class="line">np.sum(x1, axis=<span class="number">0</span>)  <span class="comment">#求和，axis如1则列相加</span></span><br><span class="line">np.cumsum(x1)  <span class="comment">#累加</span></span><br><span class="line">np.log(g)  <span class="comment">#对数</span></span><br><span class="line">np.exp(g)  <span class="comment">#指数</span></span><br><span class="line">np.sqrt(g)  <span class="comment">#开方</span></span><br><span class="line">np.square(x)  <span class="comment">#平方</span></span><br><span class="line">np.maximum(x1, x2) <span class="comment">#返回大的元素array</span></span><br><span class="line">np.where(x1&gt;x2,a,b) <span class="comment">#a和b可以是x1或者任何数，第一个参数如if。返回判断为true的元素的序列</span></span><br><span class="line">np.round(x) <span class="comment">#保留两位小数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a</span><br><span class="line">[[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span>]</span><br><span class="line">[<span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line">[<span class="number">6</span> <span class="number">7</span> <span class="number">8</span>]]</span><br><span class="line"></span><br><span class="line">a[:, <span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span> <span class="number">4</span> <span class="number">7</span>]</span><br><span class="line"></span><br><span class="line">a[<span class="number">1</span>, :]</span><br><span class="line">[<span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">a[a&gt;<span class="number">3</span>]</span><br><span class="line">[<span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">a.ravel()  将多维数组降位一维</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">a1 = np.array([<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>])</span><br><span class="line">a2 = np.vstack((a,a1))</span><br><span class="line">[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>]</span><br><span class="line"> [ <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>]</span><br><span class="line"> [ <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]]</span><br><span class="line"></span><br><span class="line">a2.reshape(<span class="number">2</span>,<span class="number">6</span>)<span class="comment"># 不改变原有数组</span></span><br><span class="line">a2.resize(<span class="number">2</span>,<span class="number">6</span>) <span class="comment"># 改变原有数组（多了补0，少了删去）</span></span><br><span class="line">[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]]</span><br><span class="line"></span><br><span class="line">a2.transpose() <span class="comment">#转置</span></span><br><span class="line">[[ <span class="number">0</span>  <span class="number">6</span>]</span><br><span class="line"> [ <span class="number">1</span>  <span class="number">7</span>]</span><br><span class="line"> [ <span class="number">2</span>  <span class="number">8</span>]</span><br><span class="line"> [ <span class="number">3</span>  <span class="number">9</span>]</span><br><span class="line"> [ <span class="number">4</span> <span class="number">10</span>]</span><br><span class="line"> [ <span class="number">5</span> <span class="number">11</span>]]</span><br><span class="line"></span><br><span class="line">np.hsplit(a2,<span class="number">3</span>)  <span class="comment"># 垂直切分,分割成3列</span></span><br><span class="line">[array([[<span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">6</span>, <span class="number">7</span>]]), array([[<span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">8</span>, <span class="number">9</span>]]), array([[ <span class="number">4</span>,  <span class="number">5</span>],</span><br><span class="line">       [<span class="number">10</span>, <span class="number">11</span>]])]</span><br><span class="line"></span><br><span class="line">np.eye(<span class="number">5</span>) <span class="comment"># 生成对角矩阵(单位矩阵</span></span><br><span class="line">[[ <span class="number">1.</span>  <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>]</span><br><span class="line"> [ <span class="number">0.</span>  <span class="number">1.</span>  <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>]</span><br><span class="line"> [ <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">1.</span>  <span class="number">0.</span>  <span class="number">0.</span>]</span><br><span class="line"> [ <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">1.</span>  <span class="number">0.</span>]</span><br><span class="line"> [ <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">1.</span>]]</span><br></pre></td></tr></table></figure></p><p>.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">b</span><br><span class="line">[[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>]</span><br><span class="line">  [ <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line">  [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>]]</span><br><span class="line"></span><br><span class="line"> [[ <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]</span><br><span class="line">  [<span class="number">12</span> <span class="number">13</span> <span class="number">14</span>]</span><br><span class="line">  [<span class="number">15</span> <span class="number">16</span> <span class="number">17</span>]]</span><br><span class="line"></span><br><span class="line"> [[<span class="number">18</span> <span class="number">19</span> <span class="number">20</span>]</span><br><span class="line">  [<span class="number">21</span> <span class="number">22</span> <span class="number">23</span>]</span><br><span class="line">  [<span class="number">24</span> <span class="number">25</span> <span class="number">26</span>]]]</span><br><span class="line">  </span><br><span class="line"> <span class="keyword">for</span> element <span class="keyword">in</span> b.flat: <span class="comment">#flat数组元素迭代器</span></span><br><span class="line">     print(element)</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">...</span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">23</span></span><br><span class="line"><span class="number">24</span></span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="number">26</span></span><br></pre></td></tr></table></figure></p><h3 id="矩阵计算"><a href="#矩阵计算" class="headerlink" title="矩阵计算"></a>矩阵计算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">A = np.array([</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">[<span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">[<span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">])</span><br><span class="line">B = np.array([</span><br><span class="line">[<span class="number">4</span>, <span class="number">4</span>, <span class="number">2</span>],</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">print(np.dot(A, B))<span class="comment">#相乘</span></span><br><span class="line">[[ <span class="number">8</span> <span class="number">10</span>  <span class="number">4</span>]</span><br><span class="line"> [<span class="number">26</span> <span class="number">31</span> <span class="number">13</span>]</span><br><span class="line"> [<span class="number">44</span> <span class="number">52</span> <span class="number">22</span>]]</span><br><span class="line"></span><br><span class="line">A_=np.linalg.inv(A) <span class="comment">#A的逆矩阵</span></span><br></pre></td></tr></table></figure><h1 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h1><p>API: <a href="http://pandas.pydata.org/pandas-docs/stable/whatsnew.html" target="_blank" rel="noopener">http://pandas.pydata.org/pandas-docs/stable/whatsnew.html</a></p><p>###Series<br>Series是pandas系列里的一维数组，它可以包含任何数据类型的标签。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pandas.Series(data=<span class="keyword">None</span>, index=<span class="keyword">None</span>, dtype=<span class="keyword">None</span>, name=<span class="keyword">None</span>, copy=<span class="keyword">False</span>, fastpath=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line">obj.name 自定义名称</span><br><span class="line">obj.values 数组表示形式</span><br><span class="line">obj.index 索引对象</span><br><span class="line">obj2 = Series([<span class="number">4</span>,<span class="number">7</span>,<span class="number">-5</span>,<span class="number">3</span>], index=[<span class="string">'d'</span>,<span class="string">'b'</span>,<span class="string">'a'</span>,<span class="string">'c'</span>])  带有标记索引</span><br></pre></td></tr></table></figure><h3 id="read-excel"><a href="#read-excel" class="headerlink" title="read_excel"></a>read_excel</h3><p>返回一个DataFrame<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pd.read_excel(io, sheetname=<span class="number">0</span>,header=<span class="number">0</span>,skiprows=<span class="keyword">None</span>,index_col=<span class="keyword">None</span>,names=<span class="keyword">None</span>,</span><br><span class="line">                  arse_cols=<span class="keyword">None</span>,date_parser=<span class="keyword">None</span>,na_values=<span class="keyword">None</span>,thousands=<span class="keyword">None</span>, </span><br><span class="line">                convert_float=<span class="keyword">True</span>,has_index_names=<span class="keyword">None</span>,converters=<span class="keyword">None</span>,dtype=<span class="keyword">None</span>,</span><br><span class="line">                true_values=<span class="keyword">None</span>,false_values=<span class="keyword">None</span>,engine=<span class="keyword">None</span>,squeeze=<span class="keyword">False</span>,**kwds)</span><br></pre></td></tr></table></figure></p><p>io ：excel 路径；<br>sheetname=[0,n]，若sheetname=None是返回全表 。注意：int/string返回的是dataframe，而none和list返回的是dict of dataframe;<br>header ：指定作为列名的行，默认0，即取第一行，数据为列名行以下的数据；若数据不含列名，则设定 header = None；<br>skiprows：省略指定行数的数据<br>skip_footer：省略从尾部数的行数据<br>.index_col ：指定列为索引列，也可以使用 u’string’.<br>names：指定列名，传入一个list数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = pd.read_excel(<span class="string">'sz50.xlsx'</span>, sheetname=<span class="number">0</span>, index_col=<span class="string">'datetime'</span>)</span><br><span class="line"><span class="keyword">print</span> (data.index)</span><br><span class="line">s = data.close <span class="comment">#名为close的列</span></span><br><span class="line"></span><br><span class="line">print(s.head(<span class="number">10</span>))<span class="comment">#输出前10条，不带参数输出5， .tail()同理</span></span><br><span class="line"></span><br><span class="line">monthly_prices = s.resample(<span class="string">'M'</span>).last() <span class="comment">#给每个月的最后一天抽样  resample('M') 按时间序列遍历</span></span><br><span class="line"><span class="comment">#resample见 https://blog.csdn.net/wangshuang1631/article/details/52314944/</span></span><br><span class="line">s.resample(<span class="string">'M'</span>).median()  <span class="comment">#返回本月index均值</span></span><br><span class="line">df.resample(<span class="string">'21D'</span>, how=<span class="string">'mean'</span>) <span class="comment">#21天均值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">custom_resampler</span><span class="params">(array_like)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> array_like[<span class="number">0</span>] <span class="comment">#返回本组的第一个值（月初的值）</span></span><br><span class="line">first_of_month_prices = s.resample(<span class="string">'M'</span>).apply(custom_resampler) <span class="comment">#apply对每一个传入的数据调用自定义函数custom_resampler</span></span><br><span class="line"></span><br><span class="line">data_s= Series.loc[datetime(<span class="number">2017</span>,<span class="number">1</span>,<span class="number">1</span>):datetime(<span class="number">2017</span>,<span class="number">1</span>,<span class="number">10</span>)]</span><br><span class="line">data_r=data_s.resample(<span class="string">'D'</span>).mean() <span class="comment">#resample在日期之间空缺的地方插入天数，index自动补NaN</span></span><br><span class="line"></span><br><span class="line">data_r.head(<span class="number">10</span>).fillna(method=<span class="string">'ffill'</span>,a) <span class="comment">#填写缺失的数据 ffill表示用前一个值填，bfill用后一个填,None用指定值。 a是一个字典&#123;0:10, 1:20, 3:200&#125;,表示第一列空值填充10...</span></span><br><span class="line"></span><br><span class="line">data_r.head(<span class="number">10</span>).dropna(axis=<span class="number">0</span>) <span class="comment">#直接删除缺失数据的行（列）</span></span><br><span class="line">data_r.head(<span class="number">10</span>).dropna(how=<span class="string">'all'</span>) <span class="comment">#只有整行数据为空才删除</span></span><br><span class="line">pd.merge(df1, df2, on=<span class="string">'name'</span>, how=<span class="string">'inner'</span>) <span class="comment">#内连接合并，根据name列，还有左连接右连接，外连接</span></span><br><span class="line">df.join(df2) <span class="comment">#合并df</span></span><br><span class="line">pd.concat(df1, df2, axis=<span class="number">0</span>) <span class="comment">#轴向连接，将多个对象沿轴堆叠到一起</span></span><br><span class="line">df.combine_first(df2) <span class="comment">#合并，忽略重复数据，都有的话保留df的内容</span></span><br></pre></td></tr></table></figure><h3 id="DataFrame"><a href="#DataFrame" class="headerlink" title="DataFrame"></a>DataFrame</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.DataFrame( data, index, columns, dtype, copy)  <span class="comment">#data: 数据格式（ndarray，series，map等）， index: 行标签， columns: 列标签</span></span><br></pre></td></tr></table></figure><h3 id="other-pandas"><a href="#other-pandas" class="headerlink" title="other (pandas.)"></a>other (pandas.)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">df.sort_index(axis=<span class="number">0</span>) <span class="comment">#排序</span></span><br><span class="line">df.sort_index(by=<span class="string">'xx'</span>, ascending=<span class="keyword">False</span>)<span class="comment">#对xx列排序， 降序,True升序</span></span><br><span class="line">DataFrame.drop(<span class="string">'x'</span>,axis=<span class="number">0</span>) <span class="comment">#删除索引为x的行（1则是列）</span></span><br><span class="line">DataFrame.mean(n=<span class="number">0</span>)  <span class="comment">#把n轴向数据求平均，得到轴数据的平均值。默认求x轴</span></span><br><span class="line">DataFrame.std() <span class="comment">#求标准差</span></span><br><span class="line">df.cov() <span class="comment">#协方差</span></span><br><span class="line">df.corr() <span class="comment">#线性相关程度(相关系数) 参数有&#123;'pearson', 'kendall', 'spearman'&#125;,默认pearson</span></span><br><span class="line">DataFrame.describe  <span class="comment">#生成描述性统计数据，包括:count,mean,std,min,25%,50%,75%,max</span></span><br><span class="line">DataFrame.diff(periods=<span class="number">1</span>, axis=<span class="number">0</span>) <span class="comment">#periods：移动的幅度，int类型，默认值为1，指相对于前一行；负数指后x行。 axis：移动的轴，0是x，1是y。&#123;0 or ‘index’, 1 or ‘columns’&#125;</span></span><br><span class="line">DataFrame.pct_change(n=<span class="number">1</span>) <span class="comment">#计算增长率,相对前n个的增长率，如n=2则(n2-n1)/n1</span></span><br><span class="line">DataFrame.rolling(window=<span class="number">30</span>).mean() <span class="comment">#前30个数据的均值（30天均线）</span></span><br><span class="line">pd.date_range(<span class="string">'20160101'</span>,periods=<span class="number">5</span>) <span class="comment">#返回日期series</span></span><br><span class="line">pd.concat([s_1, s_2], axis=<span class="number">0</span>) <span class="comment">#连接两个表. axis=0添加行, =1则增加列</span></span><br><span class="line">df.rename(columns=&#123;<span class="string">'close'</span>:<span class="string">'xx'</span>&#125;, inplace = <span class="keyword">True</span>) <span class="comment">#更改close列名为xx</span></span><br><span class="line"></span><br><span class="line">df.iloc[<span class="number">0</span>], 根据index来索引</span><br><span class="line">df.iloc[<span class="number">0</span>:<span class="number">5</span>:<span class="number">2</span>,‘x’]， 索引为<span class="string">'x'</span>。从<span class="number">0</span>到<span class="number">5</span>，间隔<span class="number">2</span>的行数据。</span><br><span class="line">df.loc[<span class="string">'a'</span>, <span class="number">3</span>]是<span class="number">-5</span>，根据索引来索引，第三列数据</span><br><span class="line">df.loc[<span class="string">'20160102'</span>:<span class="string">'20160104'</span>]，  范围索引</span><br><span class="line">df.loc[df[<span class="string">'x'</span>] &gt; <span class="number">6</span>]  <span class="comment">#布尔索引</span></span><br><span class="line">如果只传入一个字典，则结果Series/df中的索引就是原字典的键</span><br><span class="line"></span><br><span class="line">df[df.isnull().values==<span class="keyword">True</span>] <span class="comment">#输出缺失的列</span></span><br><span class="line">df.rank(axis=<span class="number">0</span>, ascending=<span class="keyword">True</span>) <span class="comment">#排序,ascending为True升序</span></span><br><span class="line">DataFrame.stack(level=<span class="number">-1</span>, dropna=<span class="keyword">True</span>) <span class="comment">#将指定级别从列堆叠到索引。也就是将数据的列“旋转”为行。</span></span><br><span class="line">df.unstack() <span class="comment">#合并(重组)两个数据帧。将数据的行“旋转”为列。</span></span><br><span class="line">df.pivot(<span class="string">'a'</span>,<span class="string">'b'</span>) <span class="comment">#将堆叠的df的列a,b重组成a（表头），b(表内容)</span></span><br><span class="line">DataFrame.aggregate（func，axis = <span class="number">0</span>，* args，** kwargs ） <span class="comment">#聚合,同.agg()  func:可以是[sum,min,max,mean,std]等numpy里的函数</span></span><br><span class="line">df.agg(&#123;<span class="string">'stock1'</span> : np.sum,</span><br><span class="line">       <span class="string">'stock2'</span> : np.std,</span><br><span class="line">       <span class="string">'stock3'</span> : np.mean&#125;) <span class="comment">#针对不同列用不同算法</span></span><br><span class="line">df.agg([np.sum, np.mean, np.std]) <span class="comment">#对同一列进行多个不同的计算</span></span><br><span class="line">df.agg(&#123;<span class="string">'high'</span>:<span class="string">'max'</span>,<span class="string">'low'</span>:<span class="string">'min'</span>,<span class="string">'close'</span>:<span class="string">'last'</span>, <span class="string">'open'</span>:<span class="string">'first'</span>&#125;) <span class="comment"># 对同一列用不同方法形成自定义命名的列</span></span><br><span class="line">df.expanding() <span class="comment">#同rolling</span></span><br><span class="line"></span><br><span class="line">DataFrame.ewm（com = <span class="keyword">None</span>，span = <span class="keyword">None</span>，halflife = <span class="keyword">None</span>，alpha = <span class="keyword">None</span>，min_periods = <span class="number">0</span>，adjust = <span class="keyword">True</span>，ignore_na = <span class="keyword">False</span>，axis = <span class="number">0</span> ） <span class="comment">#指数加权函数 http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.ewm.html</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'x'</span>].value_count()  <span class="comment">#对x列的数据进行分组计数</span></span><br><span class="line">df.idxmax()  <span class="comment">#返回列中最大值索引</span></span><br><span class="line">df.isin([<span class="string">'e'</span>])  <span class="comment">#返回包含e的列</span></span><br><span class="line">df.info()  <span class="comment">#查看数据有无缺失以及子数据类型</span></span><br><span class="line">df.describe()  <span class="comment">#展示每组数据的统计信息</span></span><br><span class="line">pd.qcut(df,<span class="number">10</span>) <span class="comment">#将数据分成10份</span></span><br><span class="line">pd.cnt(df,list) <span class="comment">#list是一个列表，将按照list的间隔分成len(list)-1份，通常配合pd.get_dummies()使用，生成哑变量矩阵</span></span><br><span class="line">pd.crosstab(a,b) <span class="comment">#构建交叉表，a是行信息，b列信息，都是Series。 常与df.div()配合使用，求出a与b的相对比例，每组和为1.</span></span><br><span class="line">df.pivot_table() <span class="comment">#透视表  ....更加底层groupby()</span></span><br></pre></td></tr></table></figure><h3 id="Panel"><a href="#Panel" class="headerlink" title="Panel"></a>Panel</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">pandas.Panel(data, items, major_axis, minor_axis, dtype, copy) </span><br><span class="line"><span class="comment"># data  数据采取各种形式，如：ndarray，series，map，lists，dict，constant和另一个数据帧(DataFrame)</span></span><br><span class="line"><span class="comment"># items - axis 0，每个项目对应于内部包含的数据帧(DataFrame)。</span></span><br><span class="line"><span class="comment"># major_axis - axis 1，它是每个数据帧(DataFrame)的索引(行)。</span></span><br><span class="line"><span class="comment"># minor_axis - axis 2，它是每个数据帧(DataFrame)的列。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pn.to_frame() <span class="comment">#转换成frame</span></span><br><span class="line">PN.rename(items&#123;<span class="string">'xx'</span>:<span class="string">'yy'</span>,<span class="string">'xxG'</span>:<span class="string">'xxx'</span>&#125;)</span><br><span class="line">Panel.transpose(*args) <span class="comment">#置换尺寸 args ： 三个位置参数：每一个代指&#123;0,1,2，'items'，'major_axis'，'minor_axis'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">访问数据</span><br><span class="line">pn[<span class="string">'close'</span>]</span><br><span class="line">pn.major_xs(<span class="string">'2017-04-10'</span>)</span><br><span class="line">pn.minor_xs(<span class="string">'2017-04-10'</span>)</span><br><span class="line"></span><br><span class="line">Panel.ix[<span class="number">0</span>:<span class="number">3</span>,<span class="number">-1</span>,<span class="string">''</span>xx] <span class="comment">#xx的dataframe的0-2列最后一行</span></span><br></pre></td></tr></table></figure><h1 id="Talib"><a href="#Talib" class="headerlink" title="Talib"></a>Talib</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tb = talib.abstract <span class="comment">#先实例化</span></span><br><span class="line">tb.MA(value,x) <span class="comment"># x日均线</span></span><br><span class="line"><span class="comment"># 例子ta.abstract.MA(value, 5) for name, value in PN.iteritems()</span></span><br><span class="line">ta.abstract.MACD(value) <span class="comment">#MACD线，参数类型Series</span></span><br><span class="line">talib.ATR() <span class="comment">#平均真实波动范围</span></span><br></pre></td></tr></table></figure><h1 id="Datetime"><a href="#Datetime" class="headerlink" title="Datetime"></a>Datetime</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">datetime(<span class="number">2017</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>) <span class="comment">#2017-01-02 03:04:05.000006</span></span><br><span class="line">datetime.now() <span class="comment">#当前时间</span></span><br><span class="line">datetime.utcnow()  <span class="comment">#当前UTC时间</span></span><br><span class="line">datetime.fromtimestamp(<span class="number">1000000000</span>) <span class="comment">#2001-09-09 09:46:40</span></span><br><span class="line">datetime.now().strftime(format=<span class="string">"%Y-%m-%d %H:%M:%S.%f"</span>) <span class="comment"># 通过给定的format将date_string转换成datetime 2018-09-16 17:32:07.261732</span></span><br><span class="line"><span class="comment">#格式：https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior</span></span><br><span class="line"></span><br><span class="line">datetime进行运算，返回timedelta</span><br><span class="line">delta=timedelta(days=<span class="number">1</span>, seconds=<span class="number">-2</span>,microseconds=<span class="number">-3</span>, minutes=<span class="number">-4</span>, hours=<span class="number">-5</span>, weeks=<span class="number">6</span>)</span><br><span class="line">delta.days, delta.seconds, delta.microseconds <span class="comment">#42 68157 999997</span></span><br><span class="line"></span><br><span class="line">now = datetime.now()</span><br><span class="line">td = timedelta(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">print</span> (now)</span><br><span class="line"><span class="keyword">print</span> (td)</span><br><span class="line"><span class="keyword">print</span> (now + td * <span class="number">2</span>)</span><br><span class="line"><span class="number">2017</span><span class="number">-11</span><span class="number">-21</span> <span class="number">20</span>:<span class="number">58</span>:<span class="number">50.763878</span></span><br><span class="line"><span class="number">1</span> day, <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"><span class="number">2017</span><span class="number">-11</span><span class="number">-23</span> <span class="number">20</span>:<span class="number">58</span>:<span class="number">50.763878</span></span><br></pre></td></tr></table></figure><h1 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h1><h3 id="pyplot"><a href="#pyplot" class="headerlink" title="pyplot"></a>pyplot</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x,y,format_string,**kwargs, kind=<span class="string">'line'</span>) <span class="comment">#绘制线图 #xy可传入一个dataframe代替，format_string设置线的类型颜色。kind=&#123;bar:纵向柱状图, barh:横线柱状图, kdf:概率密度曲线, pie:饼图&#125;</span></span><br><span class="line">plt.hist(df, bins=<span class="number">20</span>) <span class="comment">#绘制直方图 bin指定柱的个数</span></span><br><span class="line">plt.scatter(stock1.close, stock2.close, c = [<span class="string">'c'</span>,<span class="string">'r'</span>], s = <span class="number">20</span>) <span class="comment">#散点图 c设置颜色， s设置点大小</span></span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"Stock Prices"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Price"</span>)</span><br><span class="line">plt.xlabel(<span class="string">"Date"</span>)</span><br><span class="line">plt.show() </span><br><span class="line">plt.hlines(<span class="number">0</span>, xmin,xmax, linestyles=<span class="string">'dashed'</span>) <span class="comment">#绘制一条水平参考线, 0代表y=0</span></span><br><span class="line">plt.axvline() <span class="comment">#竖直参考线</span></span><br><span class="line">plt.figure(figsize = <span class="keyword">None</span>) <span class="comment">#figsize:(15,7) 生成15*7英寸的图像</span></span><br><span class="line">plt.legend([<span class="string">'x2'</span>,<span class="string">'x1'</span>]) <span class="comment">#合并x1和x2 df在同一个图上</span></span><br><span class="line">plt.fill_bewteen(x, y1, y2, alpha=<span class="number">0.5</span>, color=<span class="string">"r"</span>) <span class="comment">#在y1-y2的竖线之间填充透明度为50%的红色</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">subplot绘制子图</span><br><span class="line">plt.subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="comment">#分成2x1，选中第一个，即第一行第一列的子图 此时plt.plot(stock1.close)加进数据</span></span><br><span class="line">plt.subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>) <span class="comment">#分成2x1，占用第二个，即第一行第一列的子图</span></span><br><span class="line"></span><br><span class="line">plt.grid(<span class="keyword">True</span>) <span class="comment"># 显示背景的网格线，还有样式可选</span></span><br><span class="line">pyplot.axis(v) <span class="comment">#v = [xmin, xmax, ymin, ymax] 画布大小</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1.plot()</span><br><span class="line">a2 = a1.twinx() <span class="comment">#生成a1画布的反向y轴（右侧y轴）</span></span><br><span class="line">a2.plot()</span><br></pre></td></tr></table></figure><h1 id="题外"><a href="#题外" class="headerlink" title="题外"></a>题外</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pd.rolling_std() * np.sqrt(array)<span class="comment">#股票收益波动</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm <span class="comment">#statsmodels实现线性拟合  OLS</span></span><br><span class="line"><span class="keyword">from</span> statsmodels <span class="keyword">import</span> regression</span><br><span class="line">y </span><br><span class="line">x = np.arange(<span class="number">0</span>,<span class="number">8</span>)</span><br><span class="line">x = sm.add_constant(x) <span class="comment">#在x左边加上 值全为1的列</span></span><br><span class="line">model = regression.linear_model.LOS(y, x).fit() <span class="comment">#regression.linear_model只是调用其里面的函数LOS。y和x都是array。fit()拟合</span></span><br><span class="line">b = model.params[<span class="number">0</span>]</span><br><span class="line">k = model.params[<span class="number">1</span>]</span><br><span class="line">y_fit = k*x+b <span class="comment">#线性函数</span></span><br><span class="line">np.polynomial.Chebyshev.fit(x,y,p) <span class="comment">#多项式拟合。x，y是array，p拟合次数</span></span><br><span class="line"></span><br><span class="line">scipy.optimize.brute() <span class="comment">#穷举给定集合找到全局最小点</span></span><br><span class="line">scipy.optimize.fminbound() <span class="comment">#求给定范围内的最小值</span></span><br><span class="line">scipy.optimize.fmin_bfgs() <span class="comment">#求给定值的局部最小值</span></span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="http://www.fxdayu.com/static/standalone/tutorials.html?article=241" target="_blank" rel="noopener">http://www.fxdayu.com/static/standalone/tutorials.html?article=241</a> </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Numpy&quot;&gt;&lt;a href=&quot;#Numpy&quot; class=&quot;headerlink&quot; title=&quot;Numpy&quot;&gt;&lt;/a&gt;Numpy&lt;/h1&gt;&lt;h3 id=&quot;reshape&quot;&gt;&lt;a href=&quot;#reshape&quot; class=&quot;headerlink&quot; title=&quot;reshape&quot;&gt;&lt;/a&gt;reshape&lt;/h3&gt;&lt;p&gt;重塑&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = np.arange(&lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;).reshape(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[[ &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [[ &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [[&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;]]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://lin-tony.github.io/hexo_blog/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Django+Bootstrap+Mysql 搭个人博客</title>
    <link href="https://lin-tony.github.io/hexo_blog/2018/10/09/Django+Bootstrap+Mysql%20%E6%90%AD%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://lin-tony.github.io/hexo_blog/2018/10/09/Django+Bootstrap+Mysql 搭个人博客/</id>
    <published>2018-10-09T08:58:13.828Z</published>
    <updated>2018-10-09T08:58:13.828Z</updated>
    
    <content type="html"><![CDATA[<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>新建项目<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pycharm手动创建django项目或如下</span></span><br><span class="line">$ django-admin.py startproject website</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建Django app</span></span><br><span class="line">$ python manage.py startapp blog</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>更改数据库配置(sqlite-&gt;mysql)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/website/setting.py</span></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'blog'</span>,        <span class="comment">#数据库名字</span></span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,          <span class="comment">#账号</span></span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'tony'</span>,      <span class="comment">#密码</span></span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,    <span class="comment">#IP</span></span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">'3306'</span>,                   <span class="comment">#端口</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>更改数据库配置还需初始化<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/website/__init__.py</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">pymysql.install_as_MySQLdb() </span><br><span class="line"></span><br><span class="line"><span class="comment">#下面的只是调试</span></span><br><span class="line">db = pymysql.connect(<span class="string">"localhost"</span>, <span class="string">'root'</span>, <span class="string">'tony'</span>, <span class="string">'blog'</span>)</span><br><span class="line">cursor = db.cursor()</span><br><span class="line">cursor.execute(<span class="string">"select version()"</span>) <span class="comment">#执行sql语句调试一波</span></span><br><span class="line">data = cursor.fetchone()</span><br><span class="line">print(data)</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure></p><h3 id="模型设计"><a href="#模型设计" class="headerlink" title="模型设计"></a>模型设计</h3><p>一个model也是一个数据库的映射<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/blog/models.py</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Category</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(<span class="string">'分类'</span>,max_length=<span class="number">128</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'博客分类'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tag</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(<span class="string">'标签'</span>, max_length=<span class="number">128</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'博客标签'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entry</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    title = models.CharField(<span class="string">'文章标题'</span>,max_length=<span class="number">128</span>)</span><br><span class="line">    author = models.ForeignKey(User,verbose_name=<span class="string">'作者'</span>,on_delete=models.CASCADE)</span><br><span class="line">    img = models.ImageField(upload_to=<span class="string">'blog_img'</span>,null=<span class="keyword">True</span>,blank=<span class="keyword">True</span>,verbose_name=<span class="string">'博客配图'</span>)</span><br><span class="line">    body = models.TextField(<span class="string">'正文'</span>,)</span><br><span class="line">    abstract = models.TextField(<span class="string">'摘要'</span>,max_length=<span class="number">256</span>,null=<span class="keyword">True</span>,blank=<span class="keyword">True</span>)</span><br><span class="line">    visiting = models.PositiveIntegerField(<span class="string">'访问量'</span>,default=<span class="number">0</span>)</span><br><span class="line">    category = models.ManyToManyField(<span class="string">'Category'</span>,verbose_name=<span class="string">'博客分类'</span>)</span><br><span class="line">    tags = models.ManyToManyField(<span class="string">'Tag'</span>,verbose_name=<span class="string">'标签'</span>)</span><br><span class="line">    created_time = models.DateTimeField(<span class="string">'创建时间'</span>,auto_now_add=<span class="keyword">True</span>)</span><br><span class="line">    modifyed_time = models.DateTimeField(<span class="string">'修改时间'</span>,auto_now=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.title</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        ordering = [<span class="string">'-created_time'</span>]</span><br><span class="line">        verbose_name = <span class="string">'博客正文'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure></p><p>admin:后台管理界面, 添加删除网站的内容<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/blog/admin.py</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EntryAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'title'</span>,<span class="string">'author'</span>,<span class="string">'visiting'</span>,<span class="string">'created_time'</span>,<span class="string">'modifyed_time'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">admin.site.register(models.Category)</span><br><span class="line">admin.site.register(models.Tag)</span><br><span class="line">admin.site.register(models.Entry,EntryAdmin)</span><br></pre></td></tr></table></figure></p><p>创建超级用户<br><code>$ python manage.py createsuperuser</code></p><p>此时如果出现No such Table ‘auth_user’，说明没有初始化（创建）默认数据库表<br>创建默认库<br><code>$ python manage.py migrate</code><br>如果已经运行过上面命令，就<code>$ python manage.py makemigrations</code></p><h3 id="url、views"><a href="#url、views" class="headerlink" title="url、views"></a>url、views</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/website/urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url,include</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    url(<span class="string">r'^blog/'</span>,include(<span class="string">'blog.urls'</span>) ),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/blog/urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'blog'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>, views.index,name=<span class="string">'blog_index'</span>),</span><br><span class="line">    url(<span class="string">r'^(?P&lt;blog_id&gt;[0-9]+)'</span>, views.detail,name=<span class="string">'blog_detail'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/blog/views.py</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'blog/index.html'</span>,locals())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span><span class="params">(request,blog_id)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'blog/detail.html'</span>,locals())</span><br></pre></td></tr></table></figure><h3 id="基本前端"><a href="#基本前端" class="headerlink" title="基本前端"></a>基本前端</h3><p>bootstrap和js都放进/static/<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/website/setting.py 添加静态文件路径</span></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    os.path.join(BASE_DIR,<span class="string">'static'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/blog/templates/blog/detail.html</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;博客详情&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;博客&#123;&#123; blog_id &#125;&#125;的详情&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/blog/base.html</span></span><br><span class="line">&#123;% load staticfiles %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;&#123;% block title %&#125;&#123;% endblock %&#125;&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link href=<span class="string">"&#123;% static 'bootstrap/css/bootstrap.min.css' %&#125;"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">"&#123;% static 'blog/css/blog_nav.css' %&#125;"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &#123;% block css %&#125;&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;nav class="navbar navbar-fixed-top"&gt;</span><br><span class="line">  &lt;div class="container-fluid"&gt;</span><br><span class="line">    &lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span><br><span class="line">    &lt;div class="navbar-header"&gt;</span><br><span class="line">      &lt;button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#my-nav" aria-expanded="false"&gt;</span><br><span class="line">        &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;</span><br><span class="line">        &lt;span class="icon-bar"&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class="icon-bar"&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class="icon-bar"&gt;&lt;/span&gt;</span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">      &lt;a class="navbar-brand" href="#"&gt;hhh&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span><br><span class="line">    &lt;div class="collapse navbar-collapse" id="my-nav"&gt;</span><br><span class="line">      &lt;ul class="nav navbar-nav"&gt;</span><br><span class="line">        &lt;li class="active"&gt;&lt;a href="/blog/"&gt;博客&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li &gt;&lt;a href="#"&gt;学习资源&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li &gt;&lt;a href="#"&gt;联系我&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">      &lt;form class="navbar-form navbar-left"&gt;</span><br><span class="line">        &lt;div class="form-group"&gt;</span><br><span class="line">          &lt;input type="text" class="form-control" placeholder="Search"&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;button type="submit" class="btn btn-default"&gt;搜索&lt;/button&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">      &lt;ul class="nav navbar-nav navbar-right"&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href="#"&gt;登录&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;&lt;!-- /.navbar-collapse --&gt;</span><br><span class="line">  &lt;/div&gt;&lt;!-- /.container-fluid --&gt;</span><br><span class="line">&lt;/nav&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line"> &lt;footer&gt;</span><br><span class="line">    &lt;div class="footer" role="navigation"&gt;</span><br><span class="line">        &lt;div class="container"&gt;</span><br><span class="line">            &lt;div class="navbar-text"&gt;</span><br><span class="line">                &lt;ul class="footer-text"&gt;</span><br><span class="line">                    &lt;li&gt;&lt;a href="#"&gt;主页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                               &lt;li&gt;&lt;a href="#"&gt;联系我们&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                               &lt;li&gt;&lt;a href="#"&gt;关于博主&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                               &lt;li&gt;&lt;a href="#"&gt;文档支持&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                               &lt;li&gt;&lt;a href="/blog/"&gt;博客首页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">                &lt;p&gt;Copyright © 2018 hh &lt;/p&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script src="&#123;% static 'jquery-3.3.1.min.js' %&#125;"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src="&#123;% static 'bootstrap/js/bootstrap.min.js' %&#125;"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&#123;% block script %&#125;&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/static/blog/css/blog_nav.css</span></span><br><span class="line">body &#123;</span><br><span class="line">    margin-top: <span class="number">30</span>px;</span><br><span class="line">    font-weight: <span class="number">400</span>;</span><br><span class="line">    /* Required padding <span class="keyword">for</span> .navbar-fixed-top. Change <span class="keyword">if</span> height of navigation changes. */</span><br><span class="line">    padding-top: <span class="number">70</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Navbar <span class="keyword">and</span> footer (<span class="keyword">global</span>) styling */</span><br><span class="line">.navbar-fixed-top .nav &#123;</span><br><span class="line">    padding: <span class="number">15</span>px <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.navbar &#123;</span><br><span class="line">    color: black;</span><br><span class="line">    border-width: thin;</span><br><span class="line">    -webkit-transition: <span class="number">.2</span>s;</span><br><span class="line">    background-color: white;</span><br><span class="line">    border-bottom: <span class="number">1</span>px solid <span class="comment">#e0e0e0;</span></span><br><span class="line">    background-color: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.navbar a &#123;</span><br><span class="line">    color: black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.navbar-fixed-top .navbar-brand &#123;</span><br><span class="line">    padding: <span class="number">0</span> <span class="number">15</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.navbar-header .icon-bar &#123;</span><br><span class="line">    background-color: black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.navbar-nav &gt; li &gt; .navbar-active &#123;</span><br><span class="line">    color: <span class="comment">#E46E2E;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.navbar-scroll &#123;</span><br><span class="line">  background-color: white;</span><br><span class="line">    animation-duration: <span class="number">2</span>s;</span><br><span class="line">    animation-name: smooth;</span><br><span class="line">    -moz-box-shadow: <span class="number">1</span>px <span class="number">1</span>px <span class="number">1</span>px <span class="comment">#999;</span></span><br><span class="line">    -webkit-box-shadow: <span class="number">1</span>px <span class="number">1</span>px <span class="number">1</span>px <span class="comment">#999;</span></span><br><span class="line">    box-shadow: <span class="number">1</span>px <span class="number">1</span>px <span class="number">1</span>px <span class="comment">#999;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.jupytercon-nav &gt; li &gt; .black-tab &#123;</span><br><span class="line">    color: black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.navbar-logo &#123;</span><br><span class="line">    height: <span class="number">45</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.nav &gt; li &gt; a &#123;</span><br><span class="line">    font-size: <span class="number">20</span>px;</span><br><span class="line">    padding: <span class="number">12</span>px <span class="number">16</span>px <span class="number">10</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.nav &gt; li &gt; a:hover &#123;</span><br><span class="line">    background-color: transparent;</span><br><span class="line">    color: <span class="comment">#E46E2E;</span></span><br><span class="line">    -webkit-transition: <span class="number">.2</span>s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.nav &gt; li &gt; a:focus &#123;</span><br><span class="line">    background-color: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.nav &gt; li &gt; a:active &#123;</span><br><span class="line">    background-color: <span class="comment">#F8F8F8;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.nav &gt; li &gt; a:visited &#123;</span><br><span class="line">    background-color: <span class="comment">#F8F8F8;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.tab:hover &#123;</span><br><span class="line">    background-color: transparent;</span><br><span class="line">    color: <span class="comment">#E46E2E;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer &#123;</span><br><span class="line">    background-color: <span class="comment">#979797;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer p &#123;</span><br><span class="line">    color: white;</span><br><span class="line">    padding-top: <span class="number">10</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer li &#123;</span><br><span class="line">    color: white;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer a &#123;</span><br><span class="line">    color: white;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer li::after &#123;</span><br><span class="line">    content:<span class="string">" |"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer li:last-of-type::after &#123;</span><br><span class="line">    content:<span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer-text &#123;</span><br><span class="line">    font-size: <span class="number">16</span>px;</span><br><span class="line">    margin-left: <span class="number">0</span>;</span><br><span class="line">    padding-left: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.navbar-brand &#123;</span><br><span class="line">    float: left;</span><br><span class="line">    height: <span class="number">50</span>px;</span><br><span class="line">    padding: <span class="number">15</span>px <span class="number">15</span>px;</span><br><span class="line">    font-size: <span class="number">20</span>px;</span><br><span class="line">    line-height: <span class="number">20</span>px;</span><br><span class="line">    margin-top: <span class="number">27</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nav .navbar-form&#123;</span><br><span class="line">    padding: <span class="number">10</span>px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/blog/index.html</span></span><br><span class="line">&#123;% extends <span class="string">'blog/base.html'</span> %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;博客首页&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line">    博客首页</span><br><span class="line">    &lt;div style="height: 440px; " &gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>最终目录如下：<br><img src="https://img-blog.csdn.net/20181007211313112?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RvbnlfX2xpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><h3 id="前端设计"><a href="#前端设计" class="headerlink" title="前端设计"></a>前端设计</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/website/setting.py</span></span><br><span class="line">....</span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR,<span class="string">'media'</span>).replace(<span class="string">"//"</span>,<span class="string">"/"</span>)</span><br><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br></pre></td></tr></table></figure><p>添加图片的url<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/website/urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url,include</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    url(<span class="string">r'^blog/'</span>,include(<span class="string">'blog.urls'</span>) ),</span><br><span class="line"></span><br><span class="line">] + static(settings.MEDIA_URL,document_root=settings.MEDIA_ROOT )        <span class="comment">#添加图片的url</span></span><br></pre></td></tr></table></figure></p><p>添加两个方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/blog/models.py</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entry</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">...</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_absolute_url</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#获取当前博客详情页的url</span></span><br><span class="line">        <span class="keyword">return</span> reverse(<span class="string">"blog:blog_detail"</span>,kwargs=&#123;<span class="string">"blog_id"</span>:self.id&#125;)     <span class="comment">#app名字，详情页url的别名，参数是当前博客的id</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">increase_visiting</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#访问量加1</span></span><br><span class="line">        self.visiting += <span class="number">1</span></span><br><span class="line">        self.save(update_fields=[<span class="string">'visiting'</span>])   <span class="comment">#只保存某个字段</span></span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/blog/views.py</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    entries = models.Entry.objects.all()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'blog/index.html'</span>,locals())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span><span class="params">(request,blog_id)</span>:</span></span><br><span class="line">    entry = models.Entry.objects.get(id=blog_id)</span><br><span class="line">    entry.increase_visiting()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'blog/detail.html'</span>,locals())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#index.html</span></span><br><span class="line">&#123;% extends <span class="string">'blog/base.html'</span> %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;博客首页&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line">    &lt;div class="container"&gt;</span><br><span class="line">        &lt;div class="row"&gt;</span><br><span class="line">            &lt;div class="col-md-9"&gt;</span><br><span class="line">                &#123;% <span class="keyword">for</span> entry <span class="keyword">in</span> entries %&#125;</span><br><span class="line">                    &lt;h2&gt;&lt;a href="&#123;&#123; entry.get_absolute_url &#125;&#125;"&gt;&#123;&#123; entry.title &#125;&#125;&lt;/a&gt;&lt;/h2&gt; &lt;br&gt;</span><br><span class="line">                    &#123;% <span class="keyword">if</span> entry.img %&#125;</span><br><span class="line">                        &lt;img src=<span class="string">"&#123;&#123; entry.img.url &#125;&#125;"</span> width=<span class="string">"60%"</span> height=<span class="string">"270px"</span>/&gt;</span><br><span class="line">                    &#123;% endif %&#125;</span><br><span class="line">                    &#123;% <span class="keyword">if</span> entry.abstract %&#125;</span><br><span class="line">                        &lt;p&gt;&#123;&#123; entry.abstract &#125;&#125;&lt;/p&gt;</span><br><span class="line">                    &#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">                        &lt;p&gt;&#123;&#123; entry.body|truncatechars:180 &#125;&#125;&lt;/p&gt;</span><br><span class="line">                    &#123;% endif %&#125;</span><br><span class="line">                    &lt;p&gt;</span><br><span class="line">                        &lt;span&gt;作者：&#123;&#123; entry.author &#125;&#125;&lt;/span&gt;</span><br><span class="line">                        &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;发布时间：&#123;&#123; entry.created_time &#125;&#125;&lt;/span&gt;</span><br><span class="line">                        &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;阅读数：&#123;&#123; entry.visiting &#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#detail.html</span></span><br><span class="line">&#123;% extends <span class="string">'blog/base.html'</span> %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;博客详情页&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    &lt;div class="container"&gt;</span><br><span class="line">        &lt;div class="row"&gt;</span><br><span class="line">            &lt;div class="col-md-9"&gt;</span><br><span class="line">                &lt;h1&gt;&#123;&#123; entry.title &#125;&#125;&lt;/h1&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                    &lt;strong&gt;&#123;&#123; entry.author &#125;&#125;&lt;/strong&gt;</span><br><span class="line">                    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#123;&#123; entry.created_time|date:<span class="string">'Y年m月d日'</span> &#125;&#125;</span><br><span class="line">                    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;分类：</span><br><span class="line">                    &#123;% <span class="keyword">for</span> category <span class="keyword">in</span> entry.category.all %&#125;</span><br><span class="line">                        &amp;nbsp;&amp;nbsp;&lt;a href="#"&gt;&#123;&#123; category.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">                    &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">                    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;标签：</span><br><span class="line">                    &#123;% <span class="keyword">for</span> tag <span class="keyword">in</span> entry.tags.all %&#125;</span><br><span class="line">                        &amp;nbsp;&amp;nbsp;&lt;a href="#"&gt;&#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">                    &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">                    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;浏览量：</span><br><span class="line">                            &amp;nbsp;&amp;nbsp;&#123;&#123; entry.visiting &#125;&#125;</span><br><span class="line"></span><br><span class="line">                    &#123;% <span class="keyword">if</span> entry.img %&#125;</span><br><span class="line">                        &lt;img src=<span class="string">"&#123;&#123; entry.img.url &#125;&#125;"</span> width=<span class="string">"60%"</span> height=<span class="string">"270px"</span>/&gt;</span><br><span class="line">                    &#123;% endif %&#125;</span><br><span class="line">                    &lt;hr /&gt;</span><br><span class="line">                    &lt;p&gt;</span><br><span class="line">                        &#123;&#123; entry.body &#125;&#125;</span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h3 id="Markdown排版、语法高亮和生成目录"><a href="#Markdown排版、语法高亮和生成目录" class="headerlink" title="Markdown排版、语法高亮和生成目录"></a>Markdown排版、语法高亮和生成目录</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install markdown</span><br><span class="line">pip install pygments</span><br><span class="line">pygmentize -S default -f <span class="selector-tag">html</span> -<span class="selector-tag">a</span> <span class="selector-class">.codehilite</span> &gt; <span class="selector-tag">code</span><span class="selector-class">.css</span> #可生成<span class="selector-tag">code</span>.css文件，也就是语法高亮的样式，然后把文件放到static里</span><br></pre></td></tr></table></figure><p>配置md<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /blog/views.py</span></span><br><span class="line"><span class="keyword">import</span> markdown</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    entries = models.Entry.objects.all()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'blog/index.html'</span>,locals())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span><span class="params">(request,blog_id)</span>:</span></span><br><span class="line">    entry = models.Entry.objects.get(id=blog_id)</span><br><span class="line">    md = markdown.Markdown(extensions=[</span><br><span class="line">        <span class="string">'markdown.extensions.extra'</span>,</span><br><span class="line">        <span class="string">'markdown.extensions.codehilite'</span>,</span><br><span class="line">        <span class="string">'markdown.extensions.toc'</span>,</span><br><span class="line">    ])</span><br><span class="line">    entry.body = md.convert(entry.body)</span><br><span class="line">    entry.toc = md.toc</span><br><span class="line">    entry.increase_visiting()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'blog/detail.html'</span>, locals())</span><br></pre></td></tr></table></figure></p><p>导入css<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#base.html</span></span><br><span class="line">&#123;% load staticfiles %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;&#123;% block title %&#125;&#123;% endblock %&#125;&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link href=<span class="string">"&#123;% static 'bootstrap/css/bootstrap.min.css' %&#125;"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">"&#123;% static 'blog/css/blog_nav.css' %&#125;"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"&#123;% static 'blog/css/code.css' %&#125;"</span>&gt; <span class="comment">#这里引入css</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;nav class="navbar navbar-fixed-top"&gt;</span><br><span class="line">  &lt;div class="container-fluid"&gt;</span><br><span class="line">    &lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span><br><span class="line">    &lt;div class="navbar-header"&gt;</span><br><span class="line">      &lt;button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#my-nav" aria-expanded="false"&gt;</span><br><span class="line">        &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;</span><br><span class="line">        &lt;span class="icon-bar"&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class="icon-bar"&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class="icon-bar"&gt;&lt;/span&gt;</span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">      &lt;a class="navbar-brand" href="#"&gt;hhh&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span><br><span class="line">    &lt;div class="collapse navbar-collapse" id="my-nav"&gt;</span><br><span class="line">      &lt;ul class="nav navbar-nav"&gt;</span><br><span class="line">        &lt;li class="active"&gt;&lt;a href="/blog/"&gt;博客&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li &gt;&lt;a href="#"&gt;学习资源&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li &gt;&lt;a href="#"&gt;联系我&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">      &lt;form class="navbar-form navbar-left"&gt;</span><br><span class="line">        &lt;div class="form-group"&gt;</span><br><span class="line">          &lt;input type="text" class="form-control" placeholder="Search"&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;button type="submit" class="btn btn-default"&gt;搜索&lt;/button&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">      &lt;ul class="nav navbar-nav navbar-right"&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href="#"&gt;登录&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;&lt;!-- /.navbar-collapse --&gt;</span><br><span class="line">  &lt;/div&gt;&lt;!-- /.container-fluid --&gt;</span><br><span class="line">&lt;/nav&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line"> &lt;footer&gt;</span><br><span class="line">    &lt;div class="footer" role="navigation"&gt;</span><br><span class="line">        &lt;div class="container"&gt;</span><br><span class="line">            &lt;div class="navbar-text"&gt;</span><br><span class="line">                &lt;ul class="footer-text"&gt;</span><br><span class="line">                    &lt;li&gt;&lt;a href="#"&gt;主页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                               &lt;li&gt;&lt;a href="#"&gt;联系我们&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                               &lt;li&gt;&lt;a href="#"&gt;关于博主&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                               &lt;li&gt;&lt;a href="#"&gt;文档支持&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                               &lt;li&gt;&lt;a href="/blog/"&gt;博客首页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">                &lt;p&gt;Copyright © 2018 hh &lt;/p&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script src="&#123;% static 'jquery-3.3.1.min.js' %&#125;"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src="&#123;% static 'bootstrap/js/bootstrap.min.js' %&#125;"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&#123;% block script %&#125;&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#detail.html</span></span><br><span class="line">&#123;% extends <span class="string">'blog/base.html'</span> %&#125;</span><br><span class="line">&#123;% load staticfiles %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;博客详情页&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    &lt;div class="container"&gt;</span><br><span class="line">        &lt;div class="row"&gt;</span><br><span class="line">            &lt;div class="col-md-9"&gt;</span><br><span class="line">                &lt;h1&gt;&#123;&#123; entry.title &#125;&#125;&lt;/h1&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                    &lt;strong&gt;&#123;&#123; entry.author &#125;&#125;&lt;/strong&gt;</span><br><span class="line">                    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#123;&#123; entry.created_time|date:<span class="string">'Y年m月d日'</span> &#125;&#125;</span><br><span class="line">                    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;分类：</span><br><span class="line">                    &#123;% <span class="keyword">for</span> category <span class="keyword">in</span> entry.category.all %&#125;</span><br><span class="line">                        &amp;nbsp;&amp;nbsp;&lt;a href="#"&gt;&#123;&#123; category.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">                    &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">                    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;标签：</span><br><span class="line">                    &#123;% <span class="keyword">for</span> tag <span class="keyword">in</span> entry.tags.all %&#125;</span><br><span class="line">                        &amp;nbsp;&amp;nbsp;&lt;a href="#"&gt;&#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">                    &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">                    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;浏览量：</span><br><span class="line">                            &amp;nbsp;&amp;nbsp;&#123;&#123; entry.visiting &#125;&#125;</span><br><span class="line"></span><br><span class="line">                    &#123;% <span class="keyword">if</span> entry.img %&#125;</span><br><span class="line">                        &lt;img src=<span class="string">"&#123;&#123; entry.img.url &#125;&#125;"</span> width=<span class="string">"10%"</span> height=<span class="string">"10%"</span>/&gt;</span><br><span class="line">                    &#123;% endif %&#125;</span><br><span class="line">                    &lt;hr /&gt;</span><br><span class="line">                    &lt;p&gt;</span><br><span class="line">                        &#123;&#123; entry.toc|safe &#125;&#125; <span class="comment">#给加上safe过滤器，表示不需要转义，直接显示原始内容</span></span><br><span class="line">                        &#123;&#123; entry.body|safe &#125;&#125;  <span class="comment">#一样</span></span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>然后在blog查看效果</p><p>暂时先搁置，发现还有挺多没学到的东西。。</p><p>参考：</p><blockquote><p><a href="http://wiki.jikexueyuan.com/project/django-set-up-blog/models.html" target="_blank" rel="noopener">http://wiki.jikexueyuan.com/project/django-set-up-blog/models.html</a><br><a href="https://www.cnblogs.com/derek1184405959/p/9060981.html" target="_blank" rel="noopener">https://www.cnblogs.com/derek1184405959/p/9060981.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;初始化&quot;&gt;&lt;a href=&quot;#初始化&quot; class=&quot;headerlink&quot; title=&quot;初始化&quot;&gt;&lt;/a&gt;初始化&lt;/h3&gt;&lt;p&gt;新建项目&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#pycharm手动创建django项目或如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ django-admin.py startproject website&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#创建Django app&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python manage.py startapp blog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://lin-tony.github.io/hexo_blog/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python Network Programming</title>
    <link href="https://lin-tony.github.io/hexo_blog/2018/10/09/Python%20Network%20Programming/"/>
    <id>https://lin-tony.github.io/hexo_blog/2018/10/09/Python Network Programming/</id>
    <published>2018-10-09T08:58:11.933Z</published>
    <updated>2018-10-09T08:58:11.933Z</updated>
    
    <content type="html"><![CDATA[<h1 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h1><p>socket.gethostbyname(hostname) </p><p>socket.gethostbyaddr(addr)</p><p>socket.getservbyname(name)  查询端口号(如name=’www’, 返回80)</p><p>socket.getserbyport(80) 返回’www’</p><p>127.<em>.</em>.<em> 是本地ip<br><a id="more"></a><br>10.</em>.<em>.</em>  172.16-31.<em>.</em> 192.168.<em>.</em> 为私有子网所预留。</p><p>子网掩码255.255.255.0 可以表述为<strong><em>.</em></strong>.<strong><em>.</em></strong>/24 （***=11111111，8位）</p><h3 id="tcp"><a href="#tcp" class="headerlink" title="tcp"></a>tcp</h3><p>sock = socket.socket(xxx…)   (参数参考<a href="https://www.cnblogs.com/wumingxiaoyao/p/7047658.html" target="_blank" rel="noopener">https://www.cnblogs.com/wumingxiaoyao/p/7047658.html</a>)（ 一般要写SO_REUSERADDR以防同一端口最近关闭的连接还未关闭导致错误，因为关闭后会有CLOSE-WAIT和TIME-WAIT 状态）</p><p>sock.accept() 会创建一个连接套接字  （对应客户端发送的sock.connect()）</p><p>sock.listen() 会创建一个监听套接字</p><p>sock.sendall() 实现了完整数据块传输，recvall需要自己写</p><p>sock.getsockname()</p><p>sock.bind(interface,port) interface取””空字符串表示接受任意网络接口的请求（0.0.0.0表示接受任意，py简化了）</p><p>sock.shutdown(xxx) 半开连接的操作</p><p>sock.makefile() 直接进行文件读写</p><p>tcp客户端服务端<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env <span class="keyword">python3</span></span><br><span class="line"></span><br><span class="line">import argparse, socket</span><br><span class="line"></span><br><span class="line">def recvall(sock, length):</span><br><span class="line">    data = <span class="keyword">b</span><span class="string">''</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(data) &lt; length:</span><br><span class="line">        more = sock.recv(length - <span class="built_in">len</span>(data))</span><br><span class="line">        <span class="keyword">if</span> not more:</span><br><span class="line">            raise EOFError(<span class="string">'was expecting %d bytes but only received'</span></span><br><span class="line">                           <span class="string">' %d bytes before the socket closed'</span></span><br><span class="line">                           % (length, <span class="built_in">len</span>(data)))</span><br><span class="line">        data += more</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">def server(interface, port):</span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">    sock.bind((interface, port))</span><br><span class="line">    sock.listen(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">'Listening at'</span>, sock.getsockname())</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">'Waiting to accept a new connection'</span>)</span><br><span class="line">        sc, sockname = sock.accept()</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">'We have accepted a connection from'</span>, sockname)</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">'  Socket name:'</span>, sc.getsockname())</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">'  Socket peer:'</span>, sc.getpeername())</span><br><span class="line">        message = recvall(sc, <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">'  Incoming sixteen-octet message:'</span>, repr(message))</span><br><span class="line">        sc.sendall(<span class="keyword">b</span><span class="string">'Farewell, client'</span>)</span><br><span class="line">        sc.<span class="keyword">close</span>()</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">'  Reply sent, socket closed'</span>)</span><br><span class="line"></span><br><span class="line">def client(host, port):</span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    sock.connect((host, port))</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">'Client has been assigned socket name'</span>, sock.getsockname())</span><br><span class="line">    sock.sendall(<span class="keyword">b</span><span class="string">'Hi there, server'</span>)</span><br><span class="line">    reply = recvall(sock, <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">'The server said'</span>, repr(reply))</span><br><span class="line">    sock.<span class="keyword">close</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    choices = &#123;<span class="string">'client'</span>: client, <span class="string">'server'</span>: server&#125;</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">'Send and receive over TCP'</span>)</span><br><span class="line">    parser.add_argument(<span class="string">'role'</span>, choices=choices, <span class="keyword">help</span>=<span class="string">'which role to play'</span>)</span><br><span class="line">    parser.add_argument(<span class="string">'host'</span>, <span class="keyword">help</span>=<span class="string">'interface the server listens at;'</span></span><br><span class="line">                        <span class="string">' host the client sends to'</span>)</span><br><span class="line">    parser.add_argument(<span class="string">'-p'</span>, metavar=<span class="string">'PORT'</span>, <span class="built_in">type</span>=<span class="keyword">int</span>, default=<span class="number">1060</span>,</span><br><span class="line">                        <span class="keyword">help</span>=<span class="string">'TCP port (default 1060)'</span>)</span><br><span class="line">    <span class="keyword">args</span> = parser.parse_args()</span><br><span class="line">    <span class="function"><span class="keyword">function</span> = <span class="title">choices</span>[<span class="title">args</span>.<span class="title">role</span>]</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span><span class="params">(args.host, args.p)</span></span></span><br></pre></td></tr></table></figure></p><p>#DNS</p><p>###socket.getaddrinfo<br>socket.getaddrinfo(host, port[, family[, socktype[, proto[, flags]]]])  可解析得到IPv6地址。 返回创建一个套接字并发起连接所需的所有信息，返回的元组(family, socktype, proto, canonname, sockaddr)依次为：地址族、类型、协议代号、规范名、地址信息。用前三项作为socket构造参数，第五项为传入地址，可构造出一个连接connect()<br>flag：AI_V4MAPPED:返回IPv4映射到IPv6格式的IPv6地址.(<a href="http://www.ip2location.com/articles/ip2location-ipv4-mapped-ipv6-address" target="_blank" rel="noopener">http://www.ip2location.com/articles/ip2location-ipv4-mapped-ipv6-address</a>)</p><ol><li>bind：为服务器绑定端口。 将host取None，返回合适的通配符地址，可用于bind。</li><li>connect/sendto:连接。设置AI_ADDRCONFIG标记，讲所有无法连接的地址过滤掉。<br>使用getaddrinfo<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># Foundations of Python Network Programming, Third Edition</span></span><br><span class="line"><span class="comment"># https://github.com/brandon-rhodes/fopnp/blob/m/py3/chapter04/www_ping.py</span></span><br><span class="line"><span class="comment"># Find the WWW service of an arbitrary host using getaddrinfo().</span></span><br><span class="line"></span><br><span class="line">import argparse, <span class="built_in">socket</span>, sys</span><br><span class="line"></span><br><span class="line">def connect_to(hostname_or_ip):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        infolist = <span class="built_in">socket</span>.getaddrinfo(</span><br><span class="line">            hostname_or_ip, <span class="string">'www'</span>, <span class="number">0</span>, <span class="built_in">socket</span>.SOCK_STREAM, <span class="number">0</span>,</span><br><span class="line">            <span class="built_in">socket</span>.AI_ADDRCONFIG | <span class="built_in">socket</span>.AI_V4MAPPED | <span class="built_in">socket</span>.AI_CANONNAME,</span><br><span class="line">            )</span><br><span class="line">    except <span class="built_in">socket</span>.gaierror <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'Name service failure:'</span>, e.args[<span class="number">1</span>])</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    info = infolist[<span class="number">0</span>]  <span class="comment"># per standard recommendation, try the first one</span></span><br><span class="line">    socket_args = info[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">    address = info[<span class="number">4</span>]</span><br><span class="line">    s = <span class="built_in">socket</span>.<span class="built_in">socket</span>(*socket_args)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s.connect(address)</span><br><span class="line">    except <span class="built_in">socket</span>.error <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'Network failure:'</span>, e.args[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'Success: host'</span>, info[<span class="number">3</span>], <span class="string">'is listening on port 80'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">'Try connecting to port 80'</span>)</span><br><span class="line">    parser.add_argument(<span class="string">'hostname'</span>, help=<span class="string">'hostname that you want to contact'</span>)</span><br><span class="line">    connect_to(parser.parse_args().hostname)</span><br></pre></td></tr></table></figure></li></ol><p>dns.resolver()  可进行DNS查询(<a href="https://github.com/brandon-rhodes/fopnp/blob/m/py3/chapter04/dns_mx.py" target="_blank" rel="noopener">https://github.com/brandon-rhodes/fopnp/blob/m/py3/chapter04/dns_mx.py</a>)</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;socket&quot;&gt;&lt;a href=&quot;#socket&quot; class=&quot;headerlink&quot; title=&quot;socket&quot;&gt;&lt;/a&gt;socket&lt;/h1&gt;&lt;p&gt;socket.gethostbyname(hostname) &lt;/p&gt;
&lt;p&gt;socket.gethostbyaddr(addr)&lt;/p&gt;
&lt;p&gt;socket.getservbyname(name)  查询端口号(如name=’www’, 返回80)&lt;/p&gt;
&lt;p&gt;socket.getserbyport(80) 返回’www’&lt;/p&gt;
&lt;p&gt;127.&lt;em&gt;.&lt;/em&gt;.&lt;em&gt; 是本地ip&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="https://lin-tony.github.io/hexo_blog/categories/Python/"/>
    
    
  </entry>
  
</feed>
